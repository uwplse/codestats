/* Generated By:JavaCC: Do not edit this line. QueryParserConstants.java */
package edu.washington.cse.codestats;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface QueryParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EXISTS = 5;
  /** RegularExpression Id. */
  int COUNT = 6;
  /** RegularExpression Id. */
  int HYBRID = 7;
  /** RegularExpression Id. */
  int STMT = 8;
  /** RegularExpression Id. */
  int EXPR = 9;
  /** RegularExpression Id. */
  int WITHIN = 10;
  /** RegularExpression Id. */
  int WHERE = 11;
  /** RegularExpression Id. */
  int AND = 12;
  /** RegularExpression Id. */
  int OR = 13;
  /** RegularExpression Id. */
  int IS = 14;
  /** RegularExpression Id. */
  int IN = 15;
  /** RegularExpression Id. */
  int NOT = 16;
  /** RegularExpression Id. */
  int ANY = 17;
  /** RegularExpression Id. */
  int ALL = 18;
  /** RegularExpression Id. */
  int INDEX = 19;
  /** RegularExpression Id. */
  int IDENT = 20;
  /** RegularExpression Id. */
  int STRING = 21;
  /** RegularExpression Id. */
  int NUMBER = 22;
  /** RegularExpression Id. */
  int OPERATOR = 23;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"exists\"",
    "\"count\"",
    "\"hybrid\"",
    "\"statement\"",
    "\"expression\"",
    "\"within\"",
    "\"where\"",
    "\"and\"",
    "\"or\"",
    "\"is\"",
    "\"in\"",
    "\"not\"",
    "\"[?]\"",
    "\"[*]\"",
    "<INDEX>",
    "<IDENT>",
    "<STRING>",
    "<NUMBER>",
    "<OPERATOR>",
    "\":\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\".\"",
    "\",\"",
  };

}
